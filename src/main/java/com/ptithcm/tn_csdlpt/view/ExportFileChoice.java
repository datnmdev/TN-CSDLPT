/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.ptithcm.tn_csdlpt.view;

import com.itextpdf.text.DocumentException;
import com.ptithcm.tn_csdlpt.global_variable.LoginVariables;
import com.ptithcm.tn_csdlpt.service.ExportFile;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import javax.swing.JTable;

/**
 *
 * @author MINHDAT
 */
public class ExportFileChoice extends javax.swing.JDialog {

    /**
     * Creates new form ExportFileChoice
     */
    public ExportFileChoice(java.awt.Frame parent, boolean modal, String tabName, JTable jTable) {
        super(parent, modal);
        initComponents();
        addEvents(tabName, jTable);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnExportWord = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblWord = new javax.swing.JLabel();
        btnExportExcel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        lblExcel = new javax.swing.JLabel();
        btnExportPDF = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        lblPDF = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Xuất file");
        getContentPane().setLayout(new java.awt.CardLayout());

        jPanel1.setPreferredSize(new java.awt.Dimension(416, 123));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 10));

        btnExportWord.setOpaque(false);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/64x64/word.png"))); // NOI18N

        lblWord.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblWord.setText("WORD");

        javax.swing.GroupLayout btnExportWordLayout = new javax.swing.GroupLayout(btnExportWord);
        btnExportWord.setLayout(btnExportWordLayout);
        btnExportWordLayout.setHorizontalGroup(
            btnExportWordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnExportWordLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(btnExportWordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblWord, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        btnExportWordLayout.setVerticalGroup(
            btnExportWordLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnExportWordLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblWord, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(btnExportWord);

        btnExportExcel.setOpaque(false);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/64x64/excel.png"))); // NOI18N

        lblExcel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblExcel.setText("EXCEL");

        javax.swing.GroupLayout btnExportExcelLayout = new javax.swing.GroupLayout(btnExportExcel);
        btnExportExcel.setLayout(btnExportExcelLayout);
        btnExportExcelLayout.setHorizontalGroup(
            btnExportExcelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnExportExcelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(btnExportExcelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblExcel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        btnExportExcelLayout.setVerticalGroup(
            btnExportExcelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnExportExcelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblExcel, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(btnExportExcel);

        btnExportPDF.setOpaque(false);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/64x64/pdf.png"))); // NOI18N

        lblPDF.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPDF.setText("PDF");

        javax.swing.GroupLayout btnExportPDFLayout = new javax.swing.GroupLayout(btnExportPDF);
        btnExportPDF.setLayout(btnExportPDFLayout);
        btnExportPDFLayout.setHorizontalGroup(
            btnExportPDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnExportPDFLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(btnExportPDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblPDF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        btnExportPDFLayout.setVerticalGroup(
            btnExportPDFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnExportPDFLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblPDF, javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(btnExportPDF);

        getContentPane().add(jPanel1, "card2");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void addEvents(String tabName, JTable jTable) {
        btnExportWord.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                try {

                    String path = new FileChooser().getPathFromFileChooser("Word file", ".docx");
                    
                    // cái này dùng để lấy mã khoa để in ra lớp thì biết lớp thuộc khoa nào 
                    String makh = "";
                    String newTabName = "";
                    
                    if (tabName.contains("Quản lý lớp thuộc khoa ")) {
                        makh = tabName.replace("Quản lý lớp thuộc khoa ", "");
                        newTabName = "Quản lý lớp";
                    } else{
                        newTabName = tabName;
                    }
                    
                    switch (newTabName.strip()) {
                        case "Quản lý bộ đề":
                            String title = "Danh sách các câu hỏi";
                            String info = String.format("Mã giáo viên: %s  -  Họ và tên: %s  -  Thuộc nhóm: %s",
                                    LoginVariables.databaseConnector.getAccount().getUsername(),
                                    LoginVariables.databaseConnector.getAccount().getFullName(),
                                    LoginVariables.databaseConnector.getAccount().getGroupName()
                            );
                            ExportFile.exportFileWord(title, info, jTable, path);
                            MessageBox.showConfirmSuccessBox("Thông báo", "Xuất file word thành công!");
                            break;
                        case "Quản lý giảng viên":
                            title = "Danh sách các giảng viên";
                            info = String.format("Mã giáo viên: %s  -  Họ và tên: %s  -  Thuộc nhóm: %s",
                                    LoginVariables.databaseConnector.getAccount().getUsername(),
                                    LoginVariables.databaseConnector.getAccount().getFullName(),
                                    LoginVariables.databaseConnector.getAccount().getGroupName()
                            );
                            ExportFile.exportFileWord(title, info, jTable, path);
                            MessageBox.showConfirmSuccessBox("Thông báo", "Xuất file word thành công!");
                            break;
                        case "Quản lý sinh viên":
                            title = "Danh sách các sinh viên";
                            info = String.format("Mã giáo viên: %s  -  Họ và tên: %s  -  Thuộc nhóm: %s",
                                    LoginVariables.databaseConnector.getAccount().getUsername(),
                                    LoginVariables.databaseConnector.getAccount().getFullName(),
                                    LoginVariables.databaseConnector.getAccount().getGroupName()
                            );
                            ExportFile.exportFileWord(title, info, jTable, path);
                            MessageBox.showConfirmSuccessBox("Thông báo", "Xuất file word thành công!");
                            break;

                        case "Quản lý môn học":
                            title = "Danh sách các môn học";
                            info = String.format("Mã giáo viên: %s  -  Họ và tên: %s  -  Thuộc nhóm: %s",
                                    LoginVariables.databaseConnector.getAccount().getUsername(),
                                    LoginVariables.databaseConnector.getAccount().getFullName(),
                                    LoginVariables.databaseConnector.getAccount().getGroupName()
                            );
                            ExportFile.exportFileWord(title, info, jTable, path);
                            MessageBox.showConfirmSuccessBox("Thông báo", "Xuất file word thành công!");
                            break;
                        case "Quản lý khoa":
                            title = "Danh sách các khoa";
                            info = String.format("Mã giáo viên: %s  -  Họ và tên: %s  -  Thuộc nhóm: %s",
                                    LoginVariables.databaseConnector.getAccount().getUsername(),
                                    LoginVariables.databaseConnector.getAccount().getFullName(),
                                    LoginVariables.databaseConnector.getAccount().getGroupName()
                            );
                            ExportFile.exportFileWord(title, info, jTable, path);
                            MessageBox.showConfirmSuccessBox("Thông báo", "Xuất file word thành công!");
                            break;

                        case "Quản lý lớp":
                            title = "Danh sách các lớp của khoa " + makh;
                            info = String.format("Mã giáo viên: %s  -  Họ và tên: %s  -  Thuộc nhóm: %s",
                                    LoginVariables.databaseConnector.getAccount().getUsername(),
                                    LoginVariables.databaseConnector.getAccount().getFullName(),
                                    LoginVariables.databaseConnector.getAccount().getGroupName()
                            );
                            ExportFile.exportFileWord(title, info, jTable, path);
                            MessageBox.showConfirmSuccessBox("Thông báo", "Xuất file word thành công!");
                            break;

                        default:
                            throw new AssertionError();
                    }
                } catch (IOException ex) {
                    MessageBox.showErrorBox(ex.getClass().getName(), ex.getMessage());
                }
            }

            @Override
            public void mouseMoved(MouseEvent e) {
                btnExportWord.setCursor(new Cursor(Cursor.HAND_CURSOR));
                lblWord.setFont(new Font("Segoe UI", 1, 12));
                lblWord.setForeground(Color.red);
            }

            @Override
            public void mouseExited(MouseEvent e) {
                btnExportWord.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
                lblWord.setFont(new Font("Segoe UI", 0, 12));
                lblWord.setForeground(Color.BLACK);
            }
        });

        btnExportWord.addMouseMotionListener(new MouseMotionAdapter() {
            @Override
            public void mouseMoved(MouseEvent e) {
                btnExportWord.setCursor(new Cursor(Cursor.HAND_CURSOR));
                lblWord.setFont(new Font("Segoe UI", 1, 12));
                lblWord.setForeground(Color.red);
            }
        });

        btnExportExcel.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                try {
                    String path = new FileChooser().getPathFromFileChooser("Excel file", ".xlsx");
                    
                    // cái này dùng để lấy mã khoa để in ra lớp thì biết lớp thuộc khoa nào 
                    String makh = "";
                    String newTabName = "";
                    
                    if (tabName.contains("Quản lý lớp thuộc khoa ")) {
                        makh = tabName.replace("Quản lý lớp thuộc khoa ", "");
                        newTabName = "Quản lý lớp";
                    } else{
                        newTabName = tabName;
                    }
                    
                    switch (newTabName.strip()) {
                        case "Quản lý bộ đề":
                            ExportFile.exportFileExcel(jTable, path);
                            MessageBox.showConfirmSuccessBox("Thông báo", "Xuất file excel thành công!");
                            break;
                        case "Quản lý giảng viên":
                            ExportFile.exportFileExcel(jTable, path);
                            MessageBox.showConfirmSuccessBox("Thông báo", "Xuất file excel thành công!");
                            break;
                        case "Quản lý sinh viên":
                            ExportFile.exportFileExcel(jTable, path);
                            MessageBox.showConfirmSuccessBox("Thông báo", "Xuất file excel thành công!");
                            break;
                        case "Quản lý môn học":
                            ExportFile.exportFileExcel(jTable, path);
                            MessageBox.showConfirmSuccessBox("Thông báo", "Xuất file excel thành công!");
                            break;
                        case "Quản lý khoa":
                            ExportFile.exportFileExcel(jTable, path);
                            MessageBox.showConfirmSuccessBox("Thông báo", "Xuất file excel thành công!");
                            break;
                        case "Quản lý lớp":
                            ExportFile.exportFileExcel(jTable, path);
                            MessageBox.showConfirmSuccessBox("Thông báo", "Xuất file excel thành công!");
                            break;

                        default:
                            throw new AssertionError();
                    }
                } catch (Exception ex) {
                    MessageBox.showErrorBox(ex.getClass().getName(), ex.getMessage());
                }
            }

            @Override
            public void mouseMoved(MouseEvent e) {
                btnExportExcel.setCursor(new Cursor(Cursor.HAND_CURSOR));
                lblExcel.setFont(new Font("Segoe UI", 1, 12));
                lblExcel.setForeground(Color.RED);
            }

            @Override
            public void mouseExited(MouseEvent e) {
                btnExportExcel.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
                lblExcel.setFont(new Font("Segoe UI", 0, 12));
                lblExcel.setForeground(Color.BLACK);
            }
        });

        btnExportExcel.addMouseMotionListener(new MouseMotionAdapter() {
            @Override
            public void mouseMoved(MouseEvent e) {
                btnExportExcel.setCursor(new Cursor(Cursor.HAND_CURSOR));
                lblExcel.setFont(new Font("Segoe UI", 1, 12));
                lblExcel.setForeground(Color.RED);
            }
        });

        btnExportPDF.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                try {
                    String path = new FileChooser().getPathFromFileChooser("PDF file", ".pdf");
                    
                     // cái này dùng để lấy mã khoa để in ra lớp thì biết lớp thuộc khoa nào 
                    String makh = "";
                    String newTabName = "";
                    
                    if (tabName.contains("Quản lý lớp thuộc khoa ")) {
                        makh = tabName.replace("Quản lý lớp thuộc khoa ", "");
                        newTabName = "Quản lý lớp";
                    } else{
                        newTabName = tabName;
                    }
                    
                    switch (newTabName.strip()) {
                        case "Quản lý bộ đề":
                            String title = "Danh sách các câu hỏi";
                            String author = String.format("Mã giáo viên: %s  -  Họ và tên: %s  -  Thuộc nhóm: %s",
                                    LoginVariables.databaseConnector.getAccount().getUsername(),
                                    LoginVariables.databaseConnector.getAccount().getFullName(),
                                    LoginVariables.databaseConnector.getAccount().getGroupName()
                            );
                            ExportFile.exportFilePDF(title, author, jTable, path);
                            MessageBox.showConfirmSuccessBox("Thông báo", "Xuất file pdf thành công!");
                            break;

                        case "Quản lý giảng viên":
                            title = "Danh sách giảng viên";
                            author = String.format("Mã giáo viên: %s  -  Họ và tên: %s  -  Thuộc nhóm: %s",
                                    LoginVariables.databaseConnector.getAccount().getUsername(),
                                    LoginVariables.databaseConnector.getAccount().getFullName(),
                                    LoginVariables.databaseConnector.getAccount().getGroupName()
                            );
                            ExportFile.exportFilePDF(title, author, jTable, path);
                            MessageBox.showConfirmSuccessBox("Thông báo", "Xuất file pdf thành công!");
                            break;

                        case "Quản lý sinh viên":
                            title = "Danh sách sinh viên";
                            author = String.format("Mã giáo viên: %s  -  Họ và tên: %s  -  Thuộc nhóm: %s",
                                    LoginVariables.databaseConnector.getAccount().getUsername(),
                                    LoginVariables.databaseConnector.getAccount().getFullName(),
                                    LoginVariables.databaseConnector.getAccount().getGroupName()
                            );
                            ExportFile.exportFilePDF(title, author, jTable, path);
                            MessageBox.showConfirmSuccessBox("Thông báo", "Xuất file pdf thành công!");
                            break;

                        case "Quản lý môn học":
                            title = "Danh sách môn học";
                            author = String.format("Mã giáo viên: %s  -  Họ và tên: %s  -  Thuộc nhóm: %s",
                                    LoginVariables.databaseConnector.getAccount().getUsername(),
                                    LoginVariables.databaseConnector.getAccount().getFullName(),
                                    LoginVariables.databaseConnector.getAccount().getGroupName()
                            );
                            ExportFile.exportFilePDF(title, author, jTable, path);
                            MessageBox.showConfirmSuccessBox("Thông báo", "Xuất file pdf thành công!");
                            break;

                        case "Quản lý khoa":
                            title = "Danh sách khoa";
                            author = String.format("Mã giáo viên: %s  -  Họ và tên: %s  -  Thuộc nhóm: %s",
                                    LoginVariables.databaseConnector.getAccount().getUsername(),
                                    LoginVariables.databaseConnector.getAccount().getFullName(),
                                    LoginVariables.databaseConnector.getAccount().getGroupName()
                            );
                            ExportFile.exportFilePDF(title, author, jTable, path);
                            MessageBox.showConfirmSuccessBox("Thông báo", "Xuất file pdf thành công!");
                            break;
                        case "Quản lý lớp":
                            title = "Danh sách các lớp của khoa " + makh;
                            author = String.format("Mã giáo viên: %s  -  Họ và tên: %s  -  Thuộc nhóm: %s",
                                    LoginVariables.databaseConnector.getAccount().getUsername(),
                                    LoginVariables.databaseConnector.getAccount().getFullName(),
                                    LoginVariables.databaseConnector.getAccount().getGroupName()
                            );
                            ExportFile.exportFilePDF(title, author, jTable, path);
                            MessageBox.showConfirmSuccessBox("Thông báo", "Xuất file pdf thành công!");
                            break;
                        default:
                            throw new AssertionError();
                    }
                } catch (DocumentException ex) {
                    MessageBox.showErrorBox(ex.getClass().getName(), ex.getMessage());
                } catch (IOException ex) {
                    MessageBox.showErrorBox(ex.getClass().getName(), ex.getMessage());
                }
            }

            @Override
            public void mouseMoved(MouseEvent e) {
                btnExportPDF.setCursor(new Cursor(Cursor.HAND_CURSOR));
                lblPDF.setFont(new Font("Segoe UI", 1, 12));
                lblPDF.setForeground(Color.RED);
            }

            @Override
            public void mouseExited(MouseEvent e) {
                btnExportPDF.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
                lblPDF.setFont(new Font("Segoe UI", 0, 12));
                lblPDF.setForeground(Color.BLACK);
            }
        });

        btnExportPDF.addMouseMotionListener(new MouseMotionAdapter() {
            @Override
            public void mouseMoved(MouseEvent e) {
                btnExportPDF.setCursor(new Cursor(Cursor.HAND_CURSOR));
                lblPDF.setFont(new Font("Segoe UI", 1, 12));
                lblPDF.setForeground(Color.RED);
            }
        });
    }

//    Getters and setters
    public JPanel getBtnExportExcel() {
        return btnExportExcel;
    }

    public void setBtnExportExcel(JPanel btnExportExcel) {
        this.btnExportExcel = btnExportExcel;
    }

    public JPanel getBtnExportPDF() {
        return btnExportPDF;
    }

    public void setBtnExportPDF(JPanel btnExportPDF) {
        this.btnExportPDF = btnExportPDF;
    }

    public JPanel getBtnExportWord() {
        return btnExportWord;
    }

    public void setBtnExportWord(JPanel btnExportWord) {
        this.btnExportWord = btnExportWord;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel btnExportExcel;
    private javax.swing.JPanel btnExportPDF;
    private javax.swing.JPanel btnExportWord;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblExcel;
    private javax.swing.JLabel lblPDF;
    private javax.swing.JLabel lblWord;
    // End of variables declaration//GEN-END:variables
}
